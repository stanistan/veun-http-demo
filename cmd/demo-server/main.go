// Code Generated by github.com/stanistan/veun-http-demo/cmd/lit-gen; DO NOT EDIT.
package main

import (
	"log/slog"
	"net/http"
	"os"
	"time"

	"github.com/stanistan/veun/vhttp"
	"github.com/stanistan/veun/vhttp/handler"
)

func main() {

	initLogger()

	var addr string
	if port := os.Getenv("PORT"); port != "" {
		addr = ":" + port
	} else {
		addr = ":8080"
	}

	s := &http.Server{
		Addr:    addr,
		Handler: server(),

		// logging
		ErrorLog: slog.NewLogLogger(
			slog.Default().Handler(), slog.LevelWarn,
		),

		// timeouts
		ReadTimeout:  1 * time.Second,
		WriteTimeout: 5 * time.Second,
		IdleTimeout:  5 * time.Second,
	}

	slog.Info("starting server", "addr", addr)
	if err := s.ListenAndServe(); err != nil {
		slog.Error("server stopped", slog.String("err", err.Error()))
	}

}

var (
	h  = vhttp.Handler
	hf = vhttp.HandlerFunc
)

func server() http.Handler {
	mux := http.NewServeMux()

	mux.Handle("/docs", h(htmlPage(docsIndex)))
	mux.Handle("/docs/", http.StripPrefix("/docs/", h(htmlPage(docsPage))))

	mux.Handle("/", handler.OnlyRoot(h(htmlPage(index))))

	return handler.Checked(mux, staticFileServer())

}
